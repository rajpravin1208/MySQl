
CREATE OR REPLACE TABLE `ingka-ime-campman-test.wunderman.MT_tbl_ab_testing_promotionList`
OPTIONS(expiration_timestamp=TIMESTAMP_ADD(CURRENT_TIMESTAMP(),INTERVAL 30 DAY))
AS(
WITH `cte_int` AS (
  SELECT DISTINCT
  CONCAT(retail_unit_code, launch_id) AS promotion_bk
  ,send_utc_date
  FROM `ingka-ime-campman-test.wunderman.tbl_interaction_promotion_consolidated_at_send_date_flt_fct` int
  WHERE int.send_category = 'EMAIL')

  SELECT
  "Personalised Recommenders" AS experiment_name,
  retail_unit_code,
  campaign_name,
  CONCAT(retail_unit_code, launch_id) AS promotion_bk,
   CASE
      WHEN LOWER(meta.promotion_name) LIKE '%bau%' THEN 'BAU'
      WHEN LOWER(meta.promotion_name) LIKE '%personalized%' THEN 'Target'
    END AS email_version
  
  FROM `ingka-icf-globalanalytic-prod.customer_data_for_analytics_pii.email_interaction_promotion_and_campaign_metadata_sent_dim` meta

  WHERE 
     meta.retail_unit_code IN ('ES', 'FI', 'JP')
    AND campaign_name IN ('ab_all', 'storefinder', 'newproducts')
    AND (LOWER(promotion_name) LIKE '%bau' OR LOWER(promotion_name) LIKE '%personalized')
    AND promotion_category = 'Program'
    AND CONCAT(retail_unit_code, launch_id) IN (SELECT DISTINCT promotion_bk FROM `cte_int` WHERE send_utc_date >= '2023-10-30')

-----CTA EXPERIMENT-------------------------------------
UNION ALL

  SELECT
  "CTA Experiment" AS experiment_name,
  retail_unit_code,
  campaign_name,
  CONCAT(retail_unit_code, launch_id) AS promotion_bk,
  CASE
    WHEN LOWER(promotion_name) LIKE '%email_1_a_%' THEN 'BAU'
    WHEN LOWER(promotion_name) LIKE '%email_1_b_%' THEN 'Target'
  END AS email_version,
  
  from `ingka-icf-globalanalytic-prod.customer_data_for_analytics_pii.email_interaction_promotion_and_campaign_metadata_sent_dim` meta
  WHERE 
       meta.retail_unit_code IN ('GB', 'US') 
      AND campaign_name IN ('sd_bounces', 'rf_prospects', 'sd_prospects')
      AND LOWER(promotion_name) LIKE '%ctatest' 
      AND promotion_category = 'Program'
      AND CONCAT(retail_unit_code, launch_id) IN (SELECT DISTINCT promotion_bk FROM `cte_int` WHERE send_utc_date >= '2024-03-11')

-----GIF Test EXPERIMENT-------------------------------------
-----ENGAGEMENT AND REVENUE DATA------------------------
UNION ALL

  SELECT
  "GIF Test" AS experiment_name,
  retail_unit_code,
  campaign_name,
  CONCAT(retail_unit_code, launch_id) AS promotion_bk,
  CASE
    WHEN LOWER(promotion_name) LIKE '%email_1_a_%' THEN 'BAU'
    WHEN LOWER(promotion_name) LIKE '%email_1_b_%' THEN 'Target'
  END AS email_version
  
  FROM `ingka-icf-globalanalytic-prod.customer_data_for_analytics_pii.email_interaction_promotion_and_campaign_metadata_sent_dim` meta
  WHERE 
       meta.retail_unit_code IN ('US', 'DE', 'FR', 'JP', 'KR', 'CA')
      AND campaign_name IN ('sd_heavyusers', 'ab_all', 'pp_all') 
      AND LOWER(promotion_name) LIKE '%giftest' 
      AND promotion_category = 'Program'
      AND CONCAT(retail_unit_code, launch_id) IN (SELECT DISTINCT promotion_bk FROM `cte_int` WHERE send_utc_date >= '2024-06-01'));


CREATE OR REPLACE TABLE `ingka-ime-campman-test.wunderman.MT_tbl_ab_testing`
OPTIONS(expiration_timestamp=TIMESTAMP_ADD(CURRENT_TIMESTAMP(),INTERVAL 30 DAY))
AS(
-----ENGAGEMENT AND REVENUE DATA------------------------
WITH `cte_rev` AS (
  SELECT
  customer_bk
  ,CONCAT(retail_unit_code, launch_id) AS promotion_bk
  ,EXTRACT(DATE FROM send_utc_dttm) AS send_utc_date 
  ,COUNT(DISTINCT receipt_id) AS transactions
  ,COUNT(DISTINCT CONCAT(customer_bk,retail_unit_code,launch_id,send_utc_dttm)) AS conversions
  ,SUM(created_sales_gross_amount_euro) AS created_sales_gross_amount_euro
  ,SUM(created_sales_gross_amount) AS created_sales_gross_amount
  FROM `ingka-ime-campman-test.wunderman.tbl_interaction_promotion_open_attributed_sales_fct` rev
  WHERE send_category = 'EMAIL'
  AND last_attribution_counter = 1
 

  GROUP BY 1, 2, 3)

,`cte_int` AS (
  SELECT
  send_category,
  retail_unit_code
  ,customer_bk
  ,CONCAT(retail_unit_code, launch_id) AS promotion_bk
  ,send_utc_date
  ,SUM(total_sends) AS total_sends
  ,SUM(total_bounces) AS total_bounces
  ,SUM(unique_opens) AS unique_opens
  ,SUM(unique_clicks) AS unique_clicks 
  ,SUM(unique_optouts) AS unique_optouts
  FROM `ingka-ime-campman-test.wunderman.tbl_interaction_promotion_consolidated_at_send_date_flt_fct` int
  WHERE int.send_category = 'EMAIL'
  GROUP BY 1,2,3,4,5)

,`cte_plcs` AS (
  SELECT
    ICMID AS customer_bk,
    EMAIL_ENGAGEMENT_CATEGORY AS email_engagement_category,
    PLCS_STAGE_M0 AS plscs_stage_m0,
    INSERT_DATE,
  FROM `ingka-icf-globalanalytic-prod.global_source_data.asc_ext_cust_profile_history`
  WHERE DATE_TRUNC(INSERT_DATE,MONTH) >= '2023-10-01'
  QUALIFY 1=ROW_NUMBER() OVER (PARTITION BY ICMID, DATE_TRUNC(INSERT_DATE,MONTH) ORDER BY INSERT_DATE DESC))
   
SELECT 
  pro.experiment_name,
  int.retail_unit_code,
  int.send_utc_date,
  pro.email_version,
  pro.campaign_name,
  plcs.email_engagement_category,
  plcs.plscs_stage_m0,
  SUM(int.total_sends) AS sends,
  SUM(int.unique_opens) AS unique_opens,
  SUM(int.unique_clicks) AS unique_clicks,
  SUM(rev.transactions) AS receipts,
  SUM(rev.conversions) AS conversions,
  SUM(rev.created_sales_gross_amount_euro) AS revenueEur,
  SUM(int.total_sends) - SUM(int.unique_opens) AS delivered
FROM `ingka-ime-campman-test.wunderman.MT_tbl_ab_testing_promotionList` pro

INNER JOIN `cte_int` int
  ON pro.promotion_bk = int.promotion_bk

LEFT JOIN `cte_plcs` plcs
  ON int.customer_bk = plcs.customer_bk
  AND DATE_TRUNC(int.send_utc_date,MONTH) = DATE_TRUNC(plcs.Insert_date,MONTH)

LEFT JOIN `cte_rev` rev
  ON int.promotion_bk=rev.promotion_bk
  AND int.customer_bk=rev.customer_bk
  AND int.send_utc_date = rev.send_utc_date


GROUP BY 1,2,3,4,5,6,7);

-----------BLOCK DATA------------------------

CREATE OR REPLACE TABLE `ingka-ime-campman-test.wunderman.MT_tbl_ab_testing_blocks`
OPTIONS(expiration_timestamp=TIMESTAMP_ADD(CURRENT_TIMESTAMP(),INTERVAL 30 DAY))
AS(

-----PERSONALISED RECOMMENDER EXPERIMENT BLOCK DATA----------------

 With `cte_plcs` AS (
  SELECT
    ICMID AS customer_bk,
    EMAIL_ENGAGEMENT_CATEGORY AS email_engagement_category,
    PLCS_STAGE_M0 AS plscs_stage_m0,
    INSERT_DATE,
  FROM `ingka-icf-globalanalytic-prod.global_source_data.asc_ext_cust_profile_history`
  WHERE DATE_TRUNC(INSERT_DATE,MONTH) >= '2023-10-01'
  QUALIFY 1=ROW_NUMBER() OVER (PARTITION BY ICMID, DATE_TRUNC(INSERT_DATE,MONTH) ORDER BY INSERT_DATE DESC))
  
  SELECT
  meta.experiment_name,
  meta.retail_unit_code,
  meta.campaign_name,
  int.send_utc_date,
  meta.email_version,
  CASE
    WHEN int.block = 'Recommender' THEN 'Target Block'
    ELSE int.block END AS block,
  plcs.email_engagement_category,
  plcs.plscs_stage_m0,
  SUM(int.total_clicks) AS total_clicks

FROM `ingka-ime-campman-test.wunderman.tbl_interaction_promotion_clicks_block_agg_fct` int
INNER JOIN `ingka-ime-campman-test.wunderman.MT_tbl_ab_testing_promotionList` meta
ON  int.promotion_bk = meta.promotion_bk

LEFT JOIN `cte_plcs` plcs
  ON int.customer_bk = plcs.customer_bk
  AND DATE_TRUNC(int.send_utc_date,MONTH) = DATE_TRUNC(plcs.Insert_date,MONTH)

GROUP BY 1,2,3,4,5,6,7,8);

-----REVENUE SIGNIFICANCE DATA------------------------
CREATE OR REPLACE TABLE `ingka-ime-campman-test.wunderman.MT_tbl_ab_testing_revenue_fulldata`
OPTIONS(expiration_timestamp=TIMESTAMP_ADD(CURRENT_TIMESTAMP(),INTERVAL 30 DAY))
AS(
WITH `cte_rev` AS (
  SELECT
    customer_bk,
    receipt_id,
    rev.send_utc_dttm,
    CONCAT(customer_bk, send_utc_dttm) AS unique_send,
    CONCAT(retail_unit_code,launch_id) AS promotion_bk,
    SUM(created_sales_gross_amount_euro) AS revenueEur
  FROM `ingka-icf-globalanalytic-prod.customer_data_for_analytics_pii.email_interaction_promotion_open_attributed_sales_fct` rev
  WHERE last_attribution_counter = 1
  
  GROUP BY 1,2,3,4,5),

`cte_plcs` AS (
  SELECT
    ICMID AS customer_bk,
    EMAIL_ENGAGEMENT_CATEGORY AS email_engagement_category,
    PLCS_STAGE_M0 AS plscs_stage_m0,
    INSERT_DATE,
  FROM `ingka-icf-globalanalytic-prod.global_source_data.asc_ext_cust_profile_history`
  WHERE DATE_TRUNC(INSERT_DATE,MONTH) >= '2023-10-01'
  QUALIFY 1=ROW_NUMBER() OVER (PARTITION BY ICMID, DATE_TRUNC(INSERT_DATE,MONTH) ORDER BY INSERT_DATE DESC))

SELECT
  meta.experiment_name,
  meta.retail_unit_code,
  meta.campaign_name,
  rev.receipt_id,
  rev.unique_send,
  meta.email_version,
  plcs.email_engagement_category,
  plcs.plscs_stage_m0,
  SUM(rev.revenueEur) AS revenueEur 
FROM `ingka-ime-campman-test.wunderman.MT_tbl_ab_testing_promotionList` meta

INNER JOIN `cte_rev` rev
  ON meta.promotion_bk = rev.promotion_bk

LEFT JOIN `cte_plcs` plcs
  ON rev.customer_bk = plcs.customer_bk
  AND DATE_TRUNC(DATE(rev.send_utc_dttm),month) = DATE_TRUNC(plcs.Insert_date,MONTH)

GROUP BY 1,2,3,4,5,6,7,8);

------------------BY CUSTOMER---------------------------
CREATE OR REPLACE TABLE `ingka-ime-campman-test.wunderman.MT_tbl_ab_testing_revenue_customer`
OPTIONS(expiration_timestamp=TIMESTAMP_ADD(CURRENT_TIMESTAMP(),INTERVAL 30 DAY))
AS(
WITH `cte_main` AS (
SELECT
  experiment_name,
  retail_unit_code,
  customer_bk,
  email_version,
  email_engagement_category,
  plscs_stage_m0,
  SUM(revenueEur) AS revenueEur 
FROM `ingka-ime-campman-test.wunderman.MT_tbl_ab_testing_revenue_fulldata`
GROUP BY 1,2,3,4,5,6)

SELECT * EXCEPT(customer_bk) FROM `cte_main`);

------------------BY CUSTOMER AND CAMPAIGN---------------------------
CREATE OR REPLACE TABLE `ingka-ime-campman-test.wunderman.MT_tbl_ab_testing_revenue_customer_campaigns`
OPTIONS(expiration_timestamp=TIMESTAMP_ADD(CURRENT_TIMESTAMP(),INTERVAL 30 DAY))
AS(
WITH `cte_main` AS (
SELECT
  experiment_name,
  retail_unit_code,
  campaign_name,
  customer_bk,
  email_version,
  email_engagement_category,
  plscs_stage_m0,
  SUM(revenueEur) AS revenueEur 
FROM `ingka-ime-campman-test.wunderman.MT_tbl_ab_testing_revenue_fulldata`
GROUP BY 1,2,3,4,5,6,7)

SELECT * EXCEPT(customer_bk) FROM `cte_main`);

-----------------------BY RECEIPT---------------------------------------

CREATE OR REPLACE TABLE `ingka-ime-campman-test.wunderman.MT_tbl_ab_testing_revenue_receipt`
OPTIONS(expiration_timestamp=TIMESTAMP_ADD(CURRENT_TIMESTAMP(),INTERVAL 30 DAY))
AS(
WITH `cte_main` AS (
SELECT
  experiment_name,
  retail_unit_code,
  campaign_name,
  receipt_id,
  email_version,
  email_engagement_category,
  plscs_stage_m0,
  SUM(revenueEur) AS revenueEur 
FROM `ingka-ime-campman-test.wunderman.MT_tbl_ab_testing_revenue_fulldata`
GROUP BY 1,2,3,4,5,6,7)

SELECT * EXCEPT(receipt_id) FROM `cte_main`);

-----------------------BY SEND-----------------------------
CREATE OR REPLACE TABLE `ingka-ime-campman-test.wunderman.MT_tbl_ab_testing_revenue_send`
OPTIONS(expiration_timestamp=TIMESTAMP_ADD(CURRENT_TIMESTAMP(),INTERVAL 30 DAY))
AS(
WITH `cte_main` AS (
SELECT
  experiment_name,
  retail_unit_code,
  campaign_name,
  unique_send,
  email_version,
  email_engagement_category,
  plscs_stage_m0,
  SUM(revenueEur) AS revenueEur 
FROM `ingka-ime-campman-test.wunderman.MT_tbl_ab_testing_revenue_fulldata`
GROUP BY 1,2,3,4,5,6,7)

SELECT * EXCEPT(unique_send) FROM `cte_main`);
